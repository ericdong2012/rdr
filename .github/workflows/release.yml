name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install go-bindata
        run: go install github.com/go-bindata/go-bindata/...@latest

      - name: Download deps
        run: go mod download

      - name: Tidy modules
        run: go mod tidy

      - name: Sync vendor
        run: go mod vendor

      - name: Generate assets (go generate)
        run: GOFLAGS="-mod=mod" go generate ./...

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          OUT="rdr-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}"
          GOFLAGS="-mod=mod" go build -ldflags "-s -w" -o "dist/${OUT}" .

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/rdr-*
            dist/checksums.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
